buildscript {
    ext.corda_release_group = 'net.corda'
    ext.corda_release_version = '3.1-corda'
    ext.corda_gradle_plugins_version = '3.0.9'
    ext.quasar_version = '0.7.9'
    ext.junit_version = '4.12'
    ext.kotlin_version = '1.2.30'
    ext.indy_version = "1.6.4"
    ext.kotlin_coroutines_version = '0.25.0'
    ext.jackson_version = '2.9.5'

    repositories {
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlin_version}"
        classpath "net.corda.plugins:cordapp:${corda_gradle_plugins_version}"
        classpath "net.corda.plugins:cordformation:${corda_gradle_plugins_version}"
        classpath "net.corda.plugins:quasar-utils:${corda_gradle_plugins_version}"
    }
}

allprojects {

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven { url 'https://jitpack.io' }
        maven { url 'https://ci-artifactory.corda.r3cev.com/artifactory/corda-releases' }
        maven { url 'https://repo.evernym.com/artifactory/libindy-maven-local' }
    }

    apply plugin: 'kotlin'
    apply plugin: 'idea'
    apply plugin: 'net.corda.plugins.cordformation'
    apply plugin: 'net.corda.plugins.quasar-utils'

    sourceSets {
        main.resources {
            srcDir "config/dev"
            srcDir "$rootDir/genesis"
        }
        test.resources {
            srcDir "config/test"
            srcDir "$rootDir/genesis"
        }
    }


    dependencies {
        compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlin_version}"
        compile "org.jetbrains.kotlin:kotlin-reflect:${kotlin_version}"
        compile "org.jetbrains.kotlinx:kotlinx-coroutines-core:${kotlin_coroutines_version}"

        compile 'com.github.alexeykoren:konfig:2.0.4'

        compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.21'

        testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
        testCompile "junit:junit:$junit_version"
    }

    compileKotlin.kotlinOptions.jvmTarget = "1.8"
    compileTestKotlin.kotlinOptions.jvmTarget = "1.8"
    sourceCompatibility = 1.8
    kotlin.experimental.coroutines = 'enable'
}


task deployNodes(type: net.corda.plugins.Cordform, group: "corda") {
    directory "./build/nodes"

    node {
        name "O=Issuer,L=London,C=GB"
        notary = [validating: true]
        p2pPort 10001
        rpcSettings {
            address("localhost:10002")
            adminAddress("localhost:10003")
        }
        cordapps = []
        rpcUsers = [[user: "user1", "password": "test", "permissions": ["ALL"]]]
    }

    node {
        name "O=Prover,L=London,C=GB"
        p2pPort 10101
        rpcSettings {
            address("localhost:10102")
            adminAddress("localhost:10103")
        }
        cordapps = []
        rpcUsers = [[user: "user1", "password": "test", "permissions": ["ALL"]]]
    }

    node {
        name "O=Verifier,L=London,C=GB"
        p2pPort 10201
        rpcSettings {
            address("localhost:10202")
            adminAddress("localhost:10203")
        }
        cordapps = []
        rpcUsers = [[user: "user1", "password": "test", "permissions": ["ALL"]]]
    }

}

task runNodes(type: Exec, group: "corda") {
    workingDir 'build/nodes'
    executable './runnodes'
}


tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = "1.8"
        javaParameters = true   // Useful for reflection.
    }
}